#!/usr/bin/env node

import { MemoryManager } from './MemoryManager.js';
import { DMAgentWithMemoryService } from '../llm/dmAgentWithMemory.js';
import { ElizaService } from '../llm/eliza.js';
import { join, dirname } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

async function testDMWithMemory() {
  console.log('üß†üéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DMAgent —Å —Å–∏—Å—Ç–µ–º–æ–π –ø–∞–º—è—Ç–∏...\n');
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏
  const testDbPath = './data/dm_memory_test.db';
  const memoryManager = new MemoryManager(testDbPath);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Eliza —Å–µ—Ä–≤–∏—Å–∞
  const elizaService = new ElizaService({
    apiKey: process.env.ELIZA_API_KEY || 'test-key',
    baseURL: process.env.ELIZA_BASE_URL || 'https://api.eliza.yandex.net',
    timeout: 30000,
    maxRetries: 3,
    logRequests: true
  });
  
  // –°–æ–∑–¥–∞–Ω–∏–µ DMAgent —Å –ø–∞–º—è—Ç—å—é
  const dmAgent = new DMAgentWithMemoryService(elizaService, memoryManager);
  
  try {
    console.log('1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏...');
    await memoryManager.initialize();
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞\n');
    
    console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Eliza API...');
    const connectionTest = await dmAgent.testConnection();
    if (connectionTest) {
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Eliza API —Ä–∞–±–æ—Ç–∞–µ—Ç\n');
    } else {
      console.log('‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Eliza API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ELIZA_API_KEY –∏ ELIZA_BASE_URL\n');
      return;
    }
    
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DMAgent —Å –ø–∞–º—è—Ç—å—é...');
    
    const testRoomId = 'memory_integration_test';
    const testScenario = [
      {
        message: '–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–∏—Å–∞, —è —ç–ª—å—Ñ-—Å–ª–µ–¥–æ–ø—ã—Ç. –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!',
        player: '–ê–ª–∏—Å–∞',
        description: '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'
      },
      {
        message: '–Ø –æ—Å–º–∞—Ç—Ä–∏–≤–∞—é –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç–∏. –ß—Ç–æ —è –≤–∏–∂—É –≤–æ–∫—Ä—É–≥?',
        player: '–ê–ª–∏—Å–∞',
        description: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è'
      },
      {
        message: '–ë—Ä–æ—Å–∞–π –∑–∞ –º–µ–Ω—è –ø—Ä–æ–≤–µ—Ä–∫—É –í–æ—Å–ø—Ä–∏—è—Ç–∏—è d20+3',
        player: '–ê–ª–∏—Å–∞',
        description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤—ã–∫–∞ —Å tool calling'
      },
      {
        message: '–Ø –ø–æ–¥—Ö–æ–∂—É –±–ª–∏–∂–µ –∫ —Ç–æ–º—É, —á—Ç–æ –∑–∞–º–µ—Ç–∏–ª–∞. –ß—Ç–æ —ç—Ç–æ?',
        player: '–ê–ª–∏—Å–∞',
        description: '–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è'
      },
      {
        message: '–°–æ–∑–¥–∞–π –¥–ª—è –º–µ–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —ç–ª—å—Ñ–∞-—Å–ª–µ–¥–æ–ø—ã—Ç–∞ –ø–æ –∏–º–µ–Ω–∏ –ê–ª–∏—Å–∞',
        player: '–ê–ª–∏—Å–∞',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —á–µ—Ä–µ–∑ character_sheet tool'
      }
    ];
    
    for (let i = 0; i < testScenario.length; i++) {
      const { message, player, description } = testScenario[i];
      
      console.log(`\n--- –®–ê–ì ${i + 1}: ${description} ---`);
      console.log(`üìù ${player}: "${message}"`);
      
      try {
        const startTime = Date.now();
        
        const response = await dmAgent.processPlayerMessage({
          playerMessage: message,
          playerName: player,
          roomId: testRoomId,
          enableTools: true,
          useMemory: true
        });
        
        const endTime = Date.now();
        const responseTime = endTime - startTime;
        
        console.log(`üé≠ –ú–∞—Å—Ç–µ—Ä: ${response.content}`);
        console.log(`‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${responseTime}ms`);
        
        if (response.context) {
          console.log(`üß† –ö–æ–Ω—Ç–µ–∫—Å—Ç: ${response.context.recent_messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π, ${response.context.active_entities.length} —Å—É—â–Ω–æ—Å—Ç–µ–π, ~${response.context.total_tokens} —Ç–æ–∫–µ–Ω–æ–≤`);
        }
        
        if (response.toolCalls && response.toolCalls.length > 0) {
          console.log(`üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:`);
          response.toolCalls.forEach((call, idx) => {
            console.log(`   ${idx + 1}. ${call.name}: ${call.success ? '‚úÖ' : '‚ùå'} ${call.result}`);
          });
        }
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω–æ–π –∏–≥—Ä—ã
        await new Promise(resolve => setTimeout(resolve, 2000));
        
      } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —à–∞–≥–µ ${i + 1}: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        break;
      }
    }
    
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞–º—è—Ç–∏
    const stats = await memoryManager.getStats();
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏:');
    console.log(`   üéÆ –°–µ—Å—Å–∏–π: ${stats.total_sessions}`);
    console.log(`   üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: ${stats.total_messages}`);
    console.log(`   üè∑Ô∏è –°—É—â–Ω–æ—Å—Ç–µ–π: ${stats.total_entities}`);
    console.log(`   üìù –§–∞–∫—Ç–æ–≤: ${stats.total_facts}`);
    console.log(`   üìä –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Å–µ—Å—Å–∏–∏: ${stats.average_session_length} —Å–æ–æ–±—â–µ–Ω–∏–π`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—â–µ —Ä–∞–∑
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞...');
    const finalContext = await memoryManager.buildContext(testRoomId);
    console.log(`üß† –§–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç:`);
    console.log(`   üìù –°–æ–æ–±—â–µ–Ω–∏–π: ${finalContext.recent_messages.length}`);
    console.log(`   üè∑Ô∏è –°—É—â–Ω–æ—Å—Ç–µ–π: ${finalContext.active_entities.length}`);
    console.log(`   üìä –§–∞–∫—Ç–æ–≤: ${finalContext.relevant_facts.length}`);
    console.log(`   üî¢ –ü—Ä–∏–º–µ—Ä–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: ${finalContext.total_tokens}`);
    
    if (finalContext.recent_messages.length > 0) {
      console.log('\nüìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π:');
      finalContext.recent_messages.forEach((msg, idx) => {
        const role = msg.role === 'user' ? (msg.player_name || '–ò–≥—Ä–æ–∫') : '–ú–∞—Å—Ç–µ—Ä';
        const preview = msg.content.length > 60 ? msg.content.substring(0, 60) + '...' : msg.content;
        console.log(`   ${idx + 1}. ${role}: ${preview}`);
      });
    }
    
    if (finalContext.active_entities.length > 0) {
      console.log('\nüè∑Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏:');
      finalContext.active_entities.forEach((entity, idx) => {
        console.log(`   ${idx + 1}. ${entity.type}: ${entity.name} - ${entity.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}`);
      });
    }
    
    console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–æ–π –∂–µ –∫–æ–º–Ω–∞—Ç–µ
    const reconnectResponse = await dmAgent.processPlayerMessage({
      playerMessage: '–Ø –≤–µ—Ä–Ω—É–ª–∞—Å—å! –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ, –ø–æ–∫–∞ –º–µ–Ω—è –Ω–µ –±—ã–ª–æ?',
      playerName: '–ê–ª–∏—Å–∞',
      roomId: testRoomId,
      enableTools: false,
      useMemory: true
    });
    
    console.log(`üîÑ –û—Ç–≤–µ—Ç –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: ${reconnectResponse.content}`);
    console.log(`üß† –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: ${reconnectResponse.context?.recent_messages.length || 0} —Å–æ–æ–±—â–µ–Ω–∏–π`);
    
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('üß† DMAgent —Å —Å–∏—Å—Ç–µ–º–æ–π –ø–∞–º—è—Ç–∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
    console.log('üíæ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
    console.log('üéÆ –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç—Ä–æ–∏—Ç—Å—è –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–º–ø–∞–Ω–∏–∏');
    console.log('üîß Tool calling —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error);
    if (error instanceof Error) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
      console.error('Stack trace:', error.stack);
    }
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    await memoryManager.close();
    console.log('\nüì¶ –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –∑–∞–∫—Ä—ã—Ç–∞');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (import.meta.url === `file://${process.argv[1]}`) {
  testDMWithMemory().catch(console.error);
}
